import numpy as np
import magpylib as magpy
from magpylib_force.force import getFTcube
from magpylib_force.force import getFTwire

def test_ANSYS_cube_cube():
    """
    compare to ANSYS values using EXP04
    """
    dat = np.array((
        (1,7,2,377.854600016549,-188.542528864873,-92.8990855112117,-313.999320817873,141.297867367292,-298.077476393508,2.79328118297203),
        (1,7,4,222.97324592523,-196.942454862682,-45.7293146685391,-94.0189749520763,103.019653363118,-499.3139545593,14.0657284644094),
        (1,10,2,109.392835475382,-40.734672622913,-19.9251847187105,-99.5513230126722,43.6991462807681,-97.0400812701753,0.963515112458678),
        (1,10,4,82.5409955281411,-57.0911591058395,-13.7888753933175,-57.9955378465955,37.2506186840298,-167.207747894386,1.88952437302015),
        (3,7,2,268.044882092576,-122.351045384398,-181.533246425662,-154.673724179409,370.592326952291,-258.784762668333,4.13894019162516),
        (3,7,4,164.713887772005,-128.609022516067,-95.5090438696884,-38.319795035053,268.387524559781,-363.857009255895,3.85642340519037),
        (3,10,2,87.2315925006503,-30.1457939660204,-48.080701791827,-66.2482297994683,142.329658703303,-76.1110023199789,-5.72426828151665),
        (3,10,4,66.3151258655567,-44.4688881017354,-32.4675166815565,-36.9604419628989,104.515519563477,-150.862082328095,3.51331256342416),
    ))
    dat[:, (0,1,2)] = dat[:, (2,0,1)] # correct bad xyz-order

    tgt_pos = dat[:,(0,1,2)]
    F_fe = dat[:,(4,5,6)]
    T_fe = dat[:,(7,8,9)]
    gen = magpy.magnet.Cuboid(
        polarization=(0,0,1),
        dimension=(5,5,5),
    )
    tgt = magpy.magnet.Cuboid(
        dimension=(.3,.3,.3),
        polarization=(0,0,1),
    )
    tgt.mesh=(10,10,10)

    for i,poz in enumerate(tgt_pos):
        tgt.position = poz
        F,T = getFTcube(gen, tgt)

        errF = np.linalg.norm(F - F_fe[i])/np.linalg.norm(F)
        assert errF < 0.04
        errT = np.linalg.norm(T - T_fe[i])/np.linalg.norm(T)
        assert errT < 0.25


def test_ANSYS_loop_loop():
    """
    compare to ANSYS loop-loop computation
    Warning: ANSYS computes force very inaccurately and torque is completely off
    """
    data = (
        (0.5,0.25,-500,-0.378990675610971,1.16471535508468,-3.93840492731175,0.316391999895969,-0.323117059194582,0.554105980303591),
        (0.5,0.25,500,0.52319608703649,0.477119683892785,-3.95525312585684,-0.344823150943224,-0.32983037884051,0.548719111194436),
        (0.5,1.75,-500,-0.247318906984941,-0.475750180468637,2.20298358334411,-0.112567180482201,0.0876390943086132,0.40936448187346),
        (0.5,1.75,500,0.271711794735348,-0.229983825017913,2.51566260990816,0.091544957851064,0.0899073023482688,0.413415626972563),
        (1.5,0.25,-500,0.938566291200263,-2.02436288094611,-7.4080821527953,-0.618507366424736,1.99422271236167,3.65138404864739),
        (1.5,0.25,500,-0.00216325664572926,-2.1084068976844,-6.54170362000025,0.5995369738223,2.00706353179035,3.67068375878204),
        (1.5,0.5,500,-0.523860907171043,-1.99575639650359,-0.940337877715457,0.429197197716147,1.28142571497163,1.8011336159446),
        (1.5,1.75,-500,-0.328463925710092,-0.738926572407658,3.6506362987988,-0.0893135956299432,0.26486293279763,0.263853801870998),
        (1.5,1.75,500,-0.143145542837849,-0.277054173217136,2.16655477926914,0.0843493800576269,0.246120004205157,0.234717784641934),
    )

    i_squ = 0.5
    i_circ = 10

    verts1 = np.array(((.5,.5,0),(-.5,.5,0),(-.5,-.5,0),(.5,-.5,0),(.5,.5,0)))*1e-3
    sloop = magpy.current.Polyline(
        vertices=verts1,
        current=i_squ,
    )
    sloop.mesh = 100
    ts = np.linspace(0,2*np.pi,100)
    verts2 = 1.975*np.array([(np.cos(t), np.sin(t), 0) for t in ts])*1e-3
    cloop = magpy.current.Polyline(
        vertices=verts2,
        current=i_circ
    )
    cloop.mesh=3

    for d in data:
        c1y, c1z, c1x = d[:3]
        pos = np.array((c1x*1e-3,c1y,c1z))*1e-3
        cloop.position=(pos)

        # fem force
        F2 = d[6:9]

        # analytical force
        F3,_ = getFTwire(sources=cloop, targets=sloop)
        F3 *= 1e6

        err = np.linalg.norm(F2-F3)/np.linalg.norm(F3)
        assert err<0.1
